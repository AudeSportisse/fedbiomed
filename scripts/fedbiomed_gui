#!/bin/bash

basedir=$(cd $(dirname $0)/.. || exit ; pwd)
cd $basedir || exit


HOST='localhost'
PORT='8484'

function start_gui() {
    # Check config file status
    if [ -n "$CONFIG_FILE" ]; then
      echo -e "${YLW}INFO${NC}: Using $CONFIG_FILE file as GUI node config"
    else
      CONFIG_FILE="config_node.ini"
      echo -e "${YLW}INFO${NC}: Config file has not been provided, default config 'config_node.ini' will be used for GUI"
    fi
    if [ -z "${INSTALL_ONLY}" -a ! -f "etc/${CONFIG_FILE}" ] ; then
        echo "ERROR: 'etc/${CONFIG_FILE}' does not exist in Fed-BioMed root directory"
        exit 1
    fi

    # Configure data path
    if [ ! -n "$DATA_PATH" ]; then
      DATA_PATH="data"
      echo -e "${YLW}INFO${NC}: Data path has not been provided. Trying to use \${FEDBIOMED_DIR}/data dir"
      if [ -z "${INSTALL_ONLY}" -a ! -d "$basedir/$DATA_PATH" ]; then
        echo "ERROR: 'data' folder does not exist in  directory"
        exit 1
      fi
    else
        # If the path is absolute
        if [[ $DATA_PATH == /* ]]; then
            if [[ -z "${INSTALL_ONLY}"  && ! -d "$DATA_PATH" ]]; then
              echo -e "${RED}ERROR${NC}: folder '$DATA_PATH' does not exist. Can not continue.\n"
              exit 1
            fi
        # If the path is relative
        else
            if [ -z "${INSTALL_ONLY}"  -a ! -d "$basedir/$DATA_PATH" ]; then
              echo -e "${RED}ERROR${NC}: folder '$basedir/${DATA_PATH}' does not exist. Can not continue.\n"
              exit 1
            else
              DATA_PATH="$(cd "$basedir/$DATA_PATH" && pwd)"
            fi
            echo "$DATA_PATH"
        fi
    fi

    # Activate Fed-BioMed GUI environment
    source ${basedir}/scripts/fedbiomed_environment gui

    # Install node modules
    echo -e "${YLW}INFO${NC}: Controlling react bundle and modules"
    cd ./gui/ui

    # Create bundle if there is no build directory/node_modules or recreate is active
    if  [ ! -d "$basedir/gui/ui/node_modules" ] || [ ! -d "$basedir/var/gui-build" ] || [ -n "$RECREATE" ];then
        echo -e "${YLW}INFO${NC}: Installing node modules"
        yarn install || exit

        echo -e "${YLW}INFO${NC}: Building Fed-BioMed GUI"
        yarn run build || exit

        if [ -d "$basedir/var/gui-build" ];then
          rm -Rf "$basedir/var/gui-build";
        fi

        [ -e $basedir/var ] || mkdir $basedir/var # may not exist after cleaning
        mv "$basedir/gui/ui/build/" "$basedir/var/gui-build"
    fi

    # Froce workes to one

    WORKERS=1
    if [ -z "$INSTALL_ONLY" ] ; then

        # Change command according to development and production mode
        if [ "$PRODUCTION" == "True" ]; then
          command="gunicorn --workers $WORKERS --bind $HOST:$PORT wsgi:app"
        else
          command="FLASK_APP=wsgi.py flask run --host $HOST --port $PORT"
        fi

        cd ../server
        # Starting flask
        echo -e "${YLW}INFO:${NC} Starting Flask Server and API services...."
        eval "FEDBIOMED_DIR="$basedir" \
          NODE_CONFIG_FILE="$CONFIG_FILE" \
          BUILD_DIR="$basedir/var/gui-build" \
          DATA_PATH="$DATA_PATH" \
          HOST="$GUI_HOST" \
          PORT="$GUI_PORT" \
          DEBUG="$GUI_DEBUG" \
          CERTIFICATE_NAME="$CERTIFICATE_NAME" \
          PRIVATE_KEY_NAME="$PRIVATE_KEY_NAME" \
          FLASK_ENV="development" \
          $command"
    fi
}



case $1 in
  config|--config|-c)
        if [ $# -lt 3 ] ; then
            echo -e "${RED}ERROR${NC}: missing config file name"
            exit 1
        fi
        CONFIG_FILE=$2
        shift
        shift
  ;;
  data-folder|--data-folder|-df)
      if [ $# -lt 3 ] ; then
          echo -e "${RED}ERROR${NC}: missing data folder path"
          exit 1
      fi
      DATA_PATH="$2"
      shift
      shift
      ;;
  cert|--certificate|-ct)
      if [ $# -lt 3 ] ; then
          echo -e "${RED}ERROR${NC}: missing certificate path"
          exit 1
      fi
      CERTIFICATE_NAME="$2"
      if [ -z "${INSTALL_ONLY}" -a ! -f "etc/${CERTIFICATE_NAME}" ] ; then
        echo -e "${RED}ERROR${NC}: Certificate file 'etc/${CERTIFICATE_NAME}' does not exist in Fed-BioMed root directory"
        exit 1
      fi
      echo -e "${YLW}INFO${NC}: Using 'etc/$CERTIFICATE_NAME' as GUI node SSL certificate"
      shift
      shift
      ;;
  key|--primary-key|-k)
      if [ $# -lt 3 ] ; then
          echo -e "${RED}ERROR${NC}: missing primary key path"
          exit 1
      fi
      PRIVATE_KEY_NAME="$2"
      if [ -z "${INSTALL_ONLY}" -a ! -f "etc/${PRIVATE_KEY_NAME}" ] ; then
        echo -e "${RED}ERROR${NC}: Private key file 'etc/${PRIVATE_KEY_NAME}' does not exist in Fed-BioMed root directory"
        exit 1
      fi
      echo -e "${YLW}INFO${NC}: Using 'etc/$PRIVATE_KEY_NAME' as GUI node private key for SSL certificate"
      shift
      shift
      ;;
  port|--port |-p)
      GUI_PORT="$2"
      shift
      shift
      ;;
  host|--host)
      GUI_HOST="$2"
      shift
      shift
      ;;
  recreate | --recreate | -rc )
      RECREATE=True
      shift
      ;;
  install-only | --install-only | -io )
      INSTALL_ONLY=True
      shift
      ;;
  debug|--debug|-dbg)
      GUI_DEBUG=True
      shift
      ;;
  production|--production)
      PRODUCTION=True
      shift
      ;;
  help|-h|--help)
      usage gui
      ;;
esac
case $1 in
    start)
        start_gui
        ;;
    *)
      echo -e "${RED}ERROR:${NC}: Node GUI command should be used with start. Please make sure that your command is correct"
      exit 1
      ;;
esac