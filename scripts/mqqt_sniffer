#!/usr/bin/env python

'''
This script spies the fedbiomed mqtt channels and report
messages on the console in a readable form.

This allows to figure what going on an experiment.

This script could be launch on any host with access to
the mqtt server (localhost on dev env, vpn network on
prod env.
'''

from datetime import datetime
import json
import time
import yaml
import paho.mqtt.client as mqtt
from colorama import Fore, Style, init, deinit

class MqttSpy:

    # use messaging class
    def __init__(self,  mqtt_broker = 'localhost', mqtt_broker_port = 1883):

        self.client = mqtt.Client(client_id="MqttSpy")
        self.client.on_connect = self.on_connect
        self.client.on_message = self.on_message
        self.client.connect(mqtt_broker, mqtt_broker_port, keepalive=60)

        self.is_connected = False
        self.broker = mqtt_broker
        self.port   = mqtt_broker_port

        # list of channels to subscribe to
        # use of a hash instead of a proper list for convenience
        self.channels = {
            'general/server'   : None,
            'general/clients'  : None
        }

    def on_connect(self, client, userdata, flags, rc):
        print("========= MQTT : " + self.broker + "/" + str(self.port))

        self.is_connected = True

        for c in self.channels :
            print(Fore.CYAN + "** subscribing to: " + c + Style.RESET_ALL)
            self.client.subscribe(c)

    def on_message(self, client, userdata, message):
        print("========", datetime.now())
        print("topic  :", Fore.CYAN + message.topic + Style.RESET_ALL)

        # decode some output
        data = json.loads(message.payload)

        # colorize output
        k = "command"
        if k in data:
            print("command: " + Fore.GREEN + str(data[k]) + Style.RESET_ALL)
            del data[k]

        k = "success"
        if k in data:
            if data[k] is True:
                print("success: " + Fore.GREEN + str(data[k]) + Style.RESET_ALL)
            else:
                print("success: " + Fore.RED + str(data[k]) + Style.RESET_ALL)
            del data[k]

        print(yaml.dump(data, default_flow_style=False))

        # study message to detect new clients channels
        if "client_id" in data:
            c = 'general/' + data["client_id"]

            if not c in self.channels:
                self.channels[c] = None
                print(Fore.CYAN + "** subscribing to: " + c + Style.RESET_ALL)
                self.client.subscribe(c)



if __name__ == "__main__":
    # colorama
    init()

    spy = MqttSpy(mqtt_broker      = 'localhost',
                  mqtt_broker_port = 1883)

    spy.client.loop_forever()

    # colorama
    deinit()
