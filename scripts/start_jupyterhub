#!/bin/sh

SERVICES=""
SERVICES_LAUNCH=""
REBUILD=0
BUILD=0
IP_ADDRESS='localhost'

for (( i=1; i<=$#; i++)); do

    case ${!i} in
        jupyterhub* )
            SERVICES="$SERVICES fed-hub"
            SERVICES_LAUNCH="$SERVICES_LAUNCH fed-hub"
            ;;
        notebook* )
            SERVICES="$SERVICES fed-notebook"
            SERVICES_LAUNCH="$SERVICES_LAUNCH fed-notebook"
            ;;
        -bg|--bg)
            BACKGROUND="-d"
            ;;
        -rebuild|--rebuild)
            REBUILD=1
            ;;
        -build|--build)
            BUILD=1
            ;;
         -ip_address|--ip_address)
            j=$((i+1))
            IP_ADDRESS="${!j}"
            ;;  
        -h)
            echo "usage: ./scripts/start_jupyterhub [jupyterhub] [notebook] [-bg] [-rebuild] [--ip_address]"
            exit -1
            ;;
    esac
done



if [ -z "$SERVICES" ] ; then
  SERVICES='fed-hub fed-notebook'
  SERVICES_LAUNCH='fed-hub fed-notebook'
fi


for SERVICE_NAME in $SERVICES ; do

  case "$SERVICE_NAME" in
  fed-notebook )
    CONTAINER_NAME=fedbiomed-dev-notebook
    IMAGE_NAME=fed-notebook_image
    ;;
  fed-hub )
    CONTAINER_NAME=fedbiomed-dev-jupyterhub
    IMAGE_NAME=fed-hub_image
    ;;
  *)
    echo "No such service as $SERVICE_NAME"
    exit -1
    ;;
  esac

  if [ "$(docker container ps -a -f name=$CONTAINER_NAME | wc -l)" -gt 1 ] ; then
    echo -e "\n== stop and delete existing container $CONTAINER_NAME"
    # -f is needed if container currently running
    CONTAINER_IDS=$(docker container ps -a -f name=$CONTAINER_NAME --format '{{.ID}}')
    docker container rm -f $CONTAINER_IDS
  else
    echo -e "\n== no existing container $CONTAINER_NAME"
  fi

  # classical command is "docker image ls" but cannot filter on image name
  if [ "$(docker images --filter=reference=$IMAGE_NAME | wc -l)" -gt 1 ] ; then
    if [ ${REBUILD} == "1" ] ; then
        echo -e "\n== delete existing image $IMAGE_NAME"
        # -f should not be necessary if no problem
        docker image rm -f $IMAGE_NAME
    fi
  else
    echo -e "\n== no existing image $IMAGE_NAME"
  fi

done

cd ./envs/development/docker
# export JUPYTERLAB_HOST_IP=$IP_ADDRESS


if [ ${BUILD} == "1" ] ; then
    echo -e "\n==building image $SERVICES from $LAUNCH_DIR"
    docker-compose build $SERVICES
fi 

if [ -n "$SERVICES_LAUNCH" ] ; then
  echo -e "\n== launching new container $SERVICES_LAUNCH from $LAUNCH_DIR"
  docker-compose up ${BACKGROUND} $SERVICES_LAUNCH
else
  echo -e "\n== not launching any new container"
fi

