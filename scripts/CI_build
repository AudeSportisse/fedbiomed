#!/bin/bash

#
# Continuous integration launch script
# for fedbiomed-v3-linux job on ci.inria.fr/fedbiomed
#

# Prerequisites on the CI build VM :
# - conda (installed and setup)
# - docker (installed and started https://docs.docker.com/engine/install/fedora/)
# - account used for build in docker /etc/group
# - docker-compose


# Set variables for the build
set_variables() {

    echo "INFO: trigger repo for merge $(basename "$gitlabSourceRepoHomepage")"

    echo "INFO: source branch for merge $gitlabBranch"

    echo "INFO: target branch for merge $gitlabTargetBranch"

    base_path=$PWD
    echo "INFO: basepath for repo clones $base_path"
}

# Do some cleaning in envs/condas
do_clean_envs() {
    clean_level=$1
    [ -n "$clean_level" ] || clean_level=1

    if [ "$clean_level" -ge 1 ] ; then
        # clean fedbiomed environment, including remove containers
        set +e # script uses test syntax that causes non-0 error codes
        source ./scripts/fedbiomed_environment clean
        set -e

        # delete from cache docker images not used by any container
        docker image prune -f
    fi

    if [ "$clean_level" -ge 3 ] ; then
        # remove all stopped docker container
        docker container prune -f

        # delete from cache docker images not used by existing container
        # as all containers should be stopped, all docker images will need to be downloaded/rebuilt
        docker image prune -f -a
    fi

}


set_variables

do_clean_envs 1

# configure conda environments
./scripts/configure_conda

# execute CI script
ci_script=./scripts/run_test_mnist
if [ -x $ci_script -a -f $ci_script ] ; then
    #bash -x $ci_script $base_path/../..
    # MNIST data in arg1 of the script is previously installed (manually) in ../.. on ci slave
    $ci_script $base_path/../..
else
    echo "WARNING: script $ci_script notfound, skipping"
fi

do_clean_envs 1

echo "INFO: successful CI script"
exit 0
