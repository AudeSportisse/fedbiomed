syntax = "proto3";


// import "google/protobuf/any.proto";


service ResearcherService {

    // Gettask streaming API
    rpc GetTask(stream TaskRequest) returns (stream TaskResponse) {};
    


    // Unary RPC long-lived polling
    rpc GetTaskUnary(TaskRequest) returns (stream TaskResponse) {};
    

    // RPC to send task replies 
    rpc ReplyTask(stream TaskResult) returns (Empty) {}

    // Node logs
    rpc Feedback(FeedbackMessage) returns (Empty) {};
}

// Empty response
message Empty {}


// Log message from node to researcher
message FeedbackMessage {
    
    string protocol_version = 1;

    // Tensorboard scalar values
    message Scalar {
        string researcher_id = 1;
        string node_id = 2;
        string job_id = 3;
        bool train = 4;
        bool test = 5;
        bool test_on_local_updates = 6;
        bool test_on_global_updates = 7;
        map<string, float> metric = 8;
        optional int32 epoch = 9; // optional -> None
        int32 total_samples = 10;
        int32 batch_samples = 11; 
        int32 num_batches = 12;
        optional int32 num_samples_trained = 13; // optional -> None
        int32 iteration = 14;
        string protocol_version = 15;
    }

    // Log messages
    message Log {
            string researcher_id = 1;
            string node_id = 2;
            string level = 3;
            string msg = 4;
    }

    oneof feedback_type {
        Scalar scalar = 2;
        Log log = 3;
    }

}

// Task request
message TaskRequest {
    string node = 1;
    string protocol_version = 2;
}


// GRPC Message as string that is going to be 
// sent from researcher to node or node to researcher
message TaskResponse {
    int32 size = 1; 
    int32 iteration = 2; 
    bytes bytes_ = 3;  

}

// Reply stream from node to researcher
message TaskResult {
    int32 size = 1; 
    int32 iteration = 2;
    bytes bytes_ = 3;
}

message TaskResponseUnary {
    bytes bytes_ = 1; 
}